/*******************************************************************************************
*  This class is autogenerated from the class FGServiceFabricTestsEventStoredActorEventSource.eventsource.json
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/

using System;
using System.Diagnostics.Tracing;
using System.Threading.Tasks;

namespace FG.ServiceFabric.Tests.EventStoredActor
{
	[EventSource(Name = "FG-ServiceFabric-Tests-EventStoredActor")]
	internal sealed partial class FGServiceFabricTestsEventStoredActorEventSource : EventSource
	{
		public static readonly FGServiceFabricTestsEventStoredActorEventSource Current =
			new FGServiceFabricTestsEventStoredActorEventSource();

		static FGServiceFabricTestsEventStoredActorEventSource()
		{
			// A workaround for the problem where ETW activities do not 
			// get tracked until Tasks infrastructure is initialized.
			// This problem will be fixed in .NET Framework 4.6.2.
			Task.Run(() => { });
		}

		// Instance constructor is private to enforce singleton semantics
		private FGServiceFabricTestsEventStoredActorEventSource() : base()
		{
		}

		#region Keywords

		// Event keywords can be used to categorize events. 
		// Each keyword is a bit flag. A single event can be 
		// associated with multiple keywords (via EventAttribute.Keywords property).
		// Keywords must be defined as a public class named 'Keywords' 
		// inside EventSource that uses them.
		public static class Keywords
		{
			public const EventKeywords Actor = (EventKeywords) 0x1L;
		}

		#endregion Keywords

		#region Tasks

		public static class Tasks
		{
		}

		#endregion Tasks

		#region Events

		#endregion Events
	}


	internal static class FGServiceFabricTestsEventStoredActorEventSourceHelpers
	{
		public static string AsJson(this System.Exception that)
		{
			return Newtonsoft.Json.JsonConvert.SerializeObject(that);
		}
	}
}