/*******************************************************************************************
*  This class is autogenerated from the class DocumentDbStateSessionLogger
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/

using System.Diagnostics.Tracing;
using Microsoft.Azure.Documents;

namespace FG.ServiceFabric
{
    internal sealed partial class FGServiceFabricPersistenceEventSource
    {
        private const int StartingSessionEventId = 5001;


        private const int DocumentClientExceptionEventId = 5002;

        [Event(StartingSessionEventId, Level = EventLevel.LogAlways, Message = "Starting Session {2}",
            Keywords = Keywords.DocumentDbStateSession)]
        public void StartingSession(
            string managerInstance,
            string sessionInstance,
            string stateObjects)
        {
            WriteEvent(
                StartingSessionEventId,
                managerInstance,
                sessionInstance,
                stateObjects);
        }

        [Event(DocumentClientExceptionEventId, Level = EventLevel.LogAlways, Message = "{5}",
            Keywords = Keywords.DocumentDbStateSession | Keywords.Error)]
        private void DocumentClientException(
            string managerInstance,
            string sessionInstance,
            string stateSessionOperation,
            int documentClientStatusCode,
            string code,
            string message)
        {
            WriteEvent(
                DocumentClientExceptionEventId,
                managerInstance,
                sessionInstance,
                stateSessionOperation,
                documentClientStatusCode,
                code,
                message);
        }

        [NonEvent]
        public void DocumentClientException(
            string managerInstance,
            string sessionInstance,
            string stateSessionOperation,
            int documentClientStatusCode,
            Error error,
            string message)
        {
            if (IsEnabled())
                DocumentClientException(
                    managerInstance,
                    sessionInstance,
                    stateSessionOperation,
                    documentClientStatusCode,
                    error.Code,
                    error.Message);
        }
    }
}